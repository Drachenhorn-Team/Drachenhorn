<mah:MetroWindow xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                 xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                 xmlns:converter="clr-namespace:Drachenhorn.Desktop.Converter"
                 xmlns:controls="clr-namespace:Drachenhorn.Desktop.UserControls"
                 xmlns:lang="clr-namespace:Drachenhorn.Desktop.UI.Lang"
                 xmlns:sheet="clr-namespace:Drachenhorn.Core.ViewModels.Sheet;assembly=Drachenhorn.Core"
                 xmlns:fluent="urn:fluent-ribbon"
                 xmlns:controls1="clr-namespace:Enterwell.Clients.Wpf.Notifications.Controls;assembly=Enterwell.Clients.Wpf.Notifications"
                 xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
                 x:Class="Drachenhorn.Desktop.Views.MainView" mc:Ignorable="d"
                 WindowState="Maximized" TitleCharacterCasing="Normal" ShowIconOnTitleBar="True"
                 ShowTitleBar="False" Closing="MainView_OnClosing" Loaded="MainView_OnLoaded"
                 Title="{lang:Translate CharacterSheet.Title}" Height="800" Width="1100"
                 DataContext="{Binding Path=MainView, Source={StaticResource Locator}}">
    <Window.Resources>
        <ResourceDictionary>
            <converter:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
            <converter:Base64ImageConverter x:Key="Base64ImageConverter" />
        </ResourceDictionary>
    </Window.Resources>

    <Window.InputBindings>
        <KeyBinding Key="N" Modifiers="Ctrl" Command="{Binding New}" />
        <KeyBinding Key="O" Modifiers="Ctrl" Command="{Binding Open}" />
        <KeyBinding Key="S" Modifiers="Ctrl" Command="{Binding Save}" />
        <KeyBinding Key="S" Modifiers="Ctrl + Shift" Command="{Binding SaveAll}" />
        <KeyBinding Key="P" Modifiers="Ctrl" Command="{Binding Print}" />
        <KeyBinding Key="F9" Command="{Binding ShowSettings}" />
    </Window.InputBindings>

    <Grid>
        <DockPanel>
            <DockPanel.Resources>
                <DataTemplate x:Key="MenuItemTemplate" DataType="{x:Type mah:HamburgerMenuIconItem}">
                    <Grid Height="48">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="48" />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <Image Grid.Column="0"
                               Width="34"
                               HorizontalAlignment="Center"
                               VerticalAlignment="Center"
                               Source="{Binding Icon}" />
                        <TextBlock Grid.Column="1"
                                   VerticalAlignment="Center"
                                   FontSize="16"
                                   Foreground="White"
                                   Text="{Binding Label}" />
                    </Grid>
                </DataTemplate>
            </DockPanel.Resources>
            <mah:HamburgerMenu ItemTemplate="{StaticResource MenuItemTemplate}"
                               OptionsItemTemplate="{StaticResource MenuItemTemplate}"
                               DisplayMode="CompactInline">
                <mah:HamburgerMenu.ItemsSource>
                    <mah:HamburgerMenuItemCollection>
                        <mah:HamburgerMenuIconItem Icon="{StaticResource EditIcon}"/>
                    </mah:HamburgerMenuItemCollection>
                </mah:HamburgerMenu.ItemsSource>
                <mah:HamburgerMenu.OptionsItemsSource>
                    <mah:HamburgerMenuItemCollection>
                        <mah:HamburgerMenuIconItem Icon="{StaticResource PropertiesIcon}"
                                                   Label="{lang:Translate UI.Properties}"
                                                   Command="{Binding ShowSettings}"/>
                    </mah:HamburgerMenuItemCollection>
                </mah:HamburgerMenu.OptionsItemsSource>
            </mah:HamburgerMenu>
            <!--<fluent:Ribbon DockPanel.Dock="Top" IsQuickAccessToolBarMenuDropDownVisible="False"
                       IsQuickAccessToolBarVisible="False">

                <fluent:RibbonTabItem Header="{lang:Translate UI.File}">
                    <fluent:RibbonGroupBox Header="{lang:Translate UI.SaveLoad}">
                        <fluent:Button Header="{lang:Translate UI.New}"
                                   LargeIcon="{DynamicResource NewIcon}"
                                   ToolTip="{lang:TranslateText %UI.New (%Keyboard.Ctrl + N)}"
                                   Command="{Binding New}" />
                        <fluent:Button Header="{lang:Translate UI.Edit}"
                                   LargeIcon="{DynamicResource EditIcon}"
                                   ToolTip="{lang:TranslateText %UI.Edit (%Keyboard.Ctrl + O)}"
                                   Command="{Binding Open}" />

                        <fluent:DropDownButton Header="{lang:Translate UI.Save}"
                                           LargeIcon="{DynamicResource SaveIcon}"
                                           ToolTip="{lang:TranslateText %UI.Save (%Keyboard.Ctrl + S)}">
                            <fluent:Button Header="{lang:Translate UI.Save}"
                                       Icon="{DynamicResource SaveIcon}"
                                       ToolTip="{lang:TranslateText %UI.Save (%Keyboard.Ctrl + S)}"
                                       Size="Middle"
                                       Command="{Binding Save}" />
                            <fluent:Button Header="{lang:Translate UI.SaveAll}"
                                       Icon="{DynamicResource SaveAllIcon}"
                                       ToolTip="{lang:TranslateText %UI.SaveAll (%Keyboard.Ctrl + %Keyboard.Shift + S)}"
                                       Size="Middle"
                                       Command="{Binding SaveAll}" />
                            <fluent:Button Header="{lang:Translate UI.SaveAs}"
                                       Icon="{DynamicResource SaveAsIcon}"
                                       Size="Middle"
                                       Command="{Binding SaveAs}" />
                        </fluent:DropDownButton>
                    </fluent:RibbonGroupBox>
                    <fluent:RibbonGroupBox Header="{lang:Translate UI.Print}">
                        <fluent:Button Header="{lang:Translate UI.GeneratePDF}"
                                   LargeIcon="{DynamicResource PdfIcon}"
                                   ToolTip="{lang:TranslateText %UI.GeneratePDF}"
                                   Command="{Binding GeneratePDF}" />
                    </fluent:RibbonGroupBox>
                    <fluent:RibbonGroupBox Header="{lang:Translate UI.Properties}">
                        <fluent:Button Header="{lang:Translate UI.Properties}"
                                   LargeIcon="{DynamicResource PropertiesIcon}"
                                   ToolTip="{lang:TranslateText %UI.Properties (F9)}"
                                   Command="{Binding ShowSettings}" />
                    </fluent:RibbonGroupBox>
                </fluent:RibbonTabItem>


                <fluent:RibbonTabItem Header="{lang:Translate UI.Templates}">
                    <fluent:RibbonGroupBox Header="{lang:Translate UI.Templates}">
                        <fluent:InRibbonGallery Name="TemplateGallery"
                                            MinItemsInRow="3" MaxItemsInRow="4"
                                            ItemWidth="60" ItemHeight="56"
                                            SelectedItem="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Window}, Path=DataContext.CurrentTemplate}">
                            <fluent:InRibbonGallery.ItemTemplate>
                                <DataTemplate>
                                    <StackPanel VerticalAlignment="Center">
                                        <TextBlock HorizontalAlignment="Center" Text="{Binding Name}"/>
                                        <TextBlock HorizontalAlignment="Center" Text="{Binding Version}"/>
                                    </StackPanel>
                                </DataTemplate>
                            </fluent:InRibbonGallery.ItemTemplate>
                        </fluent:InRibbonGallery>
                        <fluent:Button Header="{lang:Translate UI.ShowTemplates}"
                                   LargeIcon="{DynamicResource TemplateIcon}"
                                   Command="{Binding OpenTemplates}" />
                    </fluent:RibbonGroupBox>
                </fluent:RibbonTabItem>

                <fluent:RibbonTabItem Header="{lang:Translate UI.Other}">
                    <fluent:RibbonGroupBox Header="{lang:Translate UI.Map}">
                        <fluent:Button Header="{lang:Translate UI.ShowMap}"
                                   LargeIcon="{DynamicResource MapIcon}"
                                   Command="{Binding ShowMap}"/>
                    </fluent:RibbonGroupBox>
                </fluent:RibbonTabItem>
            </fluent:Ribbon>

            <fluent:StatusBar DockPanel.Dock="Bottom" BorderThickness="0 1 0 0" />-->

            <TabControl ItemsSource="{Binding CharacterSheetViewModels}"
                    SelectedItem="{Binding CurrentSheetViewModel}">
                <TabControl.ItemTemplate>
                    <DataTemplate>
                        <WrapPanel Height="30">
                            <StackPanel Orientation="Horizontal"
                                    d:DataContext="{d:DesignInstance {x:Type sheet:CharacterSheetViewModel}}">
                                <Border Background="GhostWhite" BorderThickness="1" CornerRadius="1"
                                        ClipToBounds="True" Margin="0 2 4 2">
                                    <Image Source="{Binding CurrentSheet.CoatOfArms.Base64String,
                                                        Converter={StaticResource Base64ImageConverter}}"
                                           MaxWidth="30" MaxHeight="20" MinWidth="20" />
                                </Border>
                                <TextBlock Text="{Binding CurrentSheet.Characteristics.Name}"
                                       FontSize="12"
                                       VerticalAlignment="Center" />
                                <TextBlock Text="*" FontSize="12"
                                       Visibility="{Binding CurrentSheet.HasChanged, Converter={StaticResource BoolToVisibilityConverter}}"
                                       VerticalAlignment="Center" />
                            </StackPanel>
                            <Button Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabControl}}, Path= DataContext.CloseSheet}"
                                CommandParameter="{Binding}"
                                MinHeight="0" Height="20" MinWidth="0" Width="20"
                                Margin="5 5 -3 5">
                                <Image Source="{Binding Source={StaticResource RemoveIcon}}"
                                   Margin="-10 2 -10 0" Width="16" Height="16" />
                            </Button>
                        </WrapPanel>
                    </DataTemplate>
                </TabControl.ItemTemplate>
                <TabControl.ContentTemplate>
                    <DataTemplate>
                        <ScrollViewer PanningMode="Both" Background="{DynamicResource BackgroundBrush}">
                            <controls:CharacterSheetControl />
                        </ScrollViewer>
                    </DataTemplate>
                </TabControl.ContentTemplate>
            </TabControl>
        </DockPanel>
        <controls1:NotificationMessageContainer Name="NotificationContainer" HorizontalAlignment="Center"/>
    </Grid>
</mah:MetroWindow>