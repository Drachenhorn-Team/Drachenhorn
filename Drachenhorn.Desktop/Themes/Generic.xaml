<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:Drachenhorn.Desktop.UserElements"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:converter="clr-namespace:Drachenhorn.Desktop.Converter"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:objects="clr-namespace:Drachenhorn.Xml.Objects;assembly=Drachenhorn.Xml"
    xmlns:lang="clr-namespace:Drachenhorn.Desktop.UI.Lang"
    mc:Ignorable="d">
    <converter:EnumToStringConverter x:Key="EnumToStringConverter" />
    <converter:EnumListStringConverter x:Key="EnumListStringConverter" />
    <converter:AllowedDaysConverter x:Key="AllowedDaysConverter" />
    <ObjectDataProvider MethodName="GetValues" ObjectType="{x:Type sys:Enum}" x:Key="DsaMonthEnum">
        <ObjectDataProvider.MethodParameters>
            <x:Type TypeName="objects:DSAMonth" />
        </ObjectDataProvider.MethodParameters>
    </ObjectDataProvider>

    <Style TargetType="{x:Type local:InfoButton}">
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:InfoButton}">
                    <Button Name="PART_InfoButton"
                            IsEnabled="{TemplateBinding CanShowInfo}"
                            Width="28" Height="28">
                        <Image RenderOptions.BitmapScalingMode="HighQuality"
                               HorizontalAlignment="Center" VerticalAlignment="Center"
                               DataContext="{DynamicResource InfoIcon}"
                               Source="{Binding .}">
                            <Image.Style>
                                <Style TargetType="Image">
                                    <Style.Triggers>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter Property="Opacity" Value="0.5" />
                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value="True">
                                            <Setter Property="Opacity" Value="1" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Image.Style>
                        </Image>
                    </Button>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:DsaDatePicker}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:DsaDatePicker}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <ComboBox Name="PART_DayButton"
                                      SelectedItem="{Binding Date.Day,
                                                RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                      ItemsSource="{Binding Date.Month,
                                                Converter={StaticResource AllowedDaysConverter},
                                                RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                      FontFamily="{DynamicResource Morpheus}"
                                      FontSize="16"
                                      Grid.Column="0" Margin="5" MinWidth="60"/>
                            <ComboBox Text="{Binding Date.Month,
                                                Converter={StaticResource EnumToStringConverter},
                                                RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                      ItemsSource="{Binding Source={StaticResource DsaMonthEnum}, Converter={StaticResource EnumListStringConverter}}"
                                      FontFamily="{DynamicResource Morpheus}"
                                      FontSize="16"
                                      Grid.Column="1" Margin="5" MinWidth="200"/>
                            <TextBox Text="{Binding Date.Year,
                                                RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                     Height="{Binding ActualHeight, ElementName=PART_DayButton}"
                                     VerticalContentAlignment="Center"
                                     FontFamily="{DynamicResource Morpheus}"
                                     FontSize="16"
                                     Grid.Column="2" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:LoadingElement}">
        <Setter Property="Height" Value="20"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:LoadingElement}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Image>
                            <Image.Triggers>
                                <EventTrigger RoutedEvent="Loaded">
                                    <BeginStoryboard>
                                        <Storyboard RepeatBehavior="Forever">
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Source"
                                                                           Duration="0:0:0.8">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0.0" Value="{DynamicResource Loading1}"/>
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0.1" Value="{DynamicResource Loading2}"/>
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0.2" Value="{DynamicResource Loading3}"/>
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0.3" Value="{DynamicResource Loading4}"/>
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0.4" Value="{DynamicResource Loading5}"/>
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0.5" Value="{DynamicResource Loading6}"/>
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0.6" Value="{DynamicResource Loading7}"/>
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0.7" Value="{DynamicResource Loading8}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                            </Image.Triggers>
                        </Image>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:LocalizedComboBox}" BasedOn="{StaticResource {x:Type ComboBox}}"/>

    <Style TargetType="{x:Type local:ListEditor}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:ListEditor}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <DockPanel>
                            <DockPanel DockPanel.Dock="Left">
                                <WrapPanel DockPanel.Dock="Top" HorizontalAlignment="Right">
                                    <Button Name="PART_AddButton"
                                            Width="30" Height="30" Margin="5"
                                            ToolTip="{lang:Translate UI.Add}">
                                        <Image Source="{DynamicResource AddIcon}"
                                               Margin="2" />
                                    </Button>
                                    <Button Name="PART_RemoveButton"
                                            Width="30" Height="30" Margin="5"
                                            ToolTip="{lang:Translate UI.Remove}">
                                        <Image Source="{DynamicResource RemoveIcon}"
                                               Margin="2" />
                                    </Button>
                                </WrapPanel>

                                <ListBox Name="PART_List" ItemsSource="{Binding .}"
                                         DisplayMemberPath="{TemplateBinding DisplayMemberPath}"
                                         MinWidth="300"/>
                            </DockPanel>

                            <Separator Style="{DynamicResource VerticalSeperatorStyle}" DockPanel.Dock="Left"/>

                            <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}"
                                              Content="{Binding SelectedItem, ElementName=PART_List}"/>
                        </DockPanel>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
