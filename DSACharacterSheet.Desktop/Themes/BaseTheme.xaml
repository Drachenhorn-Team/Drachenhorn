<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:userElements="clr-namespace:DSACharacterSheet.Desktop.UserElements"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    mc:Ignorable="d">

    <SolidColorBrush x:Key="ForegroundBrush" Color="{DynamicResource ForegroundColor}" />
    <SolidColorBrush x:Key="ForegroundBrush2" Color="{DynamicResource ForegroundColor2}" />
    <SolidColorBrush x:Key="ForegroundDisabledBrush" Color="{DynamicResource ForegroundDisabledColor}" />

    <SolidColorBrush x:Key="BackgroundBrush" Color="{DynamicResource BackgroundColor}" />
    <SolidColorBrush x:Key="BackgroundBrush2" Color="{DynamicResource BackgroundColor2}" />
    <SolidColorBrush x:Key="BackgroundHightlightBrush" Color="{DynamicResource BackgroundHightlightColor}" Opacity="0.3" />
    <SolidColorBrush x:Key="BackgroundClickBrush" Color="{DynamicResource BackgroundClickColor}" Opacity="0.3" />
    <SolidColorBrush x:Key="BackgroundMouseOverBrush" Color="{DynamicResource BackgroundMouseOverColor}" Opacity="0.3" />
    <SolidColorBrush x:Key="BackgroundDisabledBrush" Color="{DynamicResource BackgroundDisabledColor}" Opacity="0.3" />

    <SolidColorBrush x:Key="BorderBrush" Color="{DynamicResource BorderColor}" />
    <SolidColorBrush x:Key="BorderHightlightBrush" Color="{DynamicResource BorderHightlightColor}" />
    <SolidColorBrush x:Key="BorderClickBrush" Color="{DynamicResource BorderClickColor}" />
    <SolidColorBrush x:Key="BorderMouseOverBrush" Color="{DynamicResource BorderMouseOverColor}" />

    <SolidColorBrush x:Key="SeperatorBrush" Color="{DynamicResource SeperatorColor}" />

    <SolidColorBrush x:Key="MenuBackgroundBrush" Color="{DynamicResource MenuBackgroundColor}" />
    <SolidColorBrush x:Key="MenuBorderBrush" Color="{DynamicResource MenuBorderColor}" />

    <SolidColorBrush x:Key="InfoBrush" Color="{DynamicResource InfoColor}" />

    <FontFamily x:Key="Morpheus">../Resources/#Morpheus</FontFamily>

    <Style TargetType="{x:Type Hyperlink}">
        <Setter Property="Foreground" Value="{StaticResource ForegroundDisabledBrush}" />
        <Setter Property="Cursor" Value="Hand" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type ProgressBar}">
        <Setter Property="Foreground" Value="{StaticResource InfoBrush}" />
        <Setter Property="Background" Value="{StaticResource BackgroundBrush2}" />
    </Style>

    <Style x:Key="FrameBorder" TargetType="{x:Type Border}">
        <Setter Property="Background" Value="{StaticResource BackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="CornerRadius" Value="5" />
        <Setter Property="Margin" Value="5" />
    </Style>

    <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Margin" Value="5" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    </Style>

    <Style TargetType="{x:Type TextBlock}">
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    </Style>

    <Style x:Key="MorpheusTextStyle" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource {x:Type TextBlock}}">
        <Setter Property="FontFamily" Value="{StaticResource Morpheus}" />
        <Setter Property="FontSize" Value="16" />
    </Style>

    <Style TargetType="{x:Type Window}" BasedOn="{StaticResource {x:Type Window}}">
        <Setter Property="Background" Value="{StaticResource BackgroundBrush}" />
    </Style>

    <Style TargetType="{x:Type userElements:InfoButton}">
        <Setter Property="Margin" Value="5" />
    </Style>

    <Style TargetType="Button">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Background" Value="{StaticResource BorderBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource BackgroundBrush2}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="1">
                        <Grid>
                            <ContentPresenter x:Name="MyContentPresenter" Content="{TemplateBinding Content}"
                                              HorizontalAlignment="Center" VerticalAlignment="Center"
                                              Margin="0" />
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource BackgroundHightlightBrush}" />
                            <Setter Property="BorderBrush" Value="{StaticResource BorderHightlightBrush}" />
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{StaticResource BackgroundClickBrush}" />
                            <Setter Property="BorderBrush" Value="{StaticResource BorderClickBrush}" />
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{StaticResource BackgroundDisabledBrush}" />
                            <Setter Property="Foreground" Value="{StaticResource ForegroundDisabledBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Separator}">
        <Setter Property="Background" Value="{StaticResource BorderBrush}" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Separator}">
                    <Rectangle HorizontalAlignment="Stretch" Fill="{TemplateBinding Background}" Height="2" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="DataGridColumnHeadersPresenter">
        <Setter Property="Background" Value="{StaticResource BackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}" />
    </Style>

    <Style TargetType="DataGridColumnHeader">
        <Setter Property="Background" Value="{StaticResource BackgroundBrush}" />
        <Setter Property="BorderBrush" Value="Black" />
        <Setter Property="BorderThickness" Value="0.5" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="Padding" Value="5" />

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource BackgroundHightlightBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="DataGridRowHeader">
        <Setter Property="Background" Value="{StaticResource BackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}" />
    </Style>

    <Style TargetType="DataGridRowsPresenter">
        <Setter Property="Background" Value="{StaticResource BackgroundBrush}" />
    </Style>

    <Style TargetType="DataGridRow">
        <Setter Property="Background" Value="{StaticResource BackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="MinHeight" Value="30" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
    </Style>

    <Style TargetType="DataGridCell">
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="True" />
                    <Condition Property="IsFocused" Value="False" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{StaticResource BackgroundHightlightBrush}" />
                <Setter Property="BorderBrush" Value="{StaticResource BorderHightlightBrush}" />
                <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="True" />
                    <Condition Property="IsFocused" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{StaticResource BackgroundHightlightBrush}" />
                <Setter Property="BorderBrush" Value="{StaticResource BorderClickBrush}" />
                <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type Button}"
           x:Key="{ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle,
               TypeInTargetAssembly={x:Type DataGrid}}">
        <Setter Property="Background" Value="{StaticResource BackgroundBrush}" />
        <Setter Property="BorderThickness" Value="0" />
    </Style>

    <Style TargetType="DataGrid">
        <Setter Property="Background" Value="{StaticResource BackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}" />
        <Setter Property="CanUserSortColumns" Value="False" />
        <Setter Property="CanUserReorderColumns" Value="False" />
    </Style>

    <Style TargetType="{x:Type StatusBar}">
        <Setter Property="Background" Value="{StaticResource MenuBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource MenuBorderBrush}" />
    </Style>

    <Style x:Key="VerticalSeperatorStyle" TargetType="{x:Type Separator}"
           BasedOn="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}">
        <Setter Property="Background" Value="{StaticResource SeperatorBrush}" />
    </Style>

    <Style TargetType="{x:Type ToolBarTray}">
        <Setter Property="Background" Value="{StaticResource BackgroundBrush}" />
        <Setter Property="IsLocked" Value="True" />
    </Style>

    <Style TargetType="{x:Type ToolBar}">
        <Setter Property="Background" Value="{StaticResource BackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}" />
        <Setter Property="ToolBar.OverflowMode" Value="Never" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToolBar}">
                    <Grid x:Name="Grid" Margin="0" SnapsToDevicePixels="True">
                        <Separator Style="{StaticResource VerticalSeperatorStyle}" />
                        <Border x:Name="MainPanelBorder" BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                Padding="{TemplateBinding Padding}">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}">
                                    <Setter Property="Margin" Value="0,0,4,0" />
                                    <Setter Property="CornerRadius" Value="3" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding}" Value="true">
                                            <Setter Property="CornerRadius" Value="0" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <DockPanel KeyboardNavigation.TabIndex="1" KeyboardNavigation.TabNavigation="Local">
                                <ContentPresenter x:Name="ToolBarHeader" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" HorizontalAlignment="Center" Margin="4,0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" />
                                <ToolBarPanel x:Name="PART_ToolBarPanel" IsItemsHost="True" Margin="0,1,2,2" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </DockPanel>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Header" Value="{x:Null}">
                            <Setter Property="Visibility" TargetName="ToolBarHeader" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="Orientation" Value="Vertical">
                            <Setter Property="Margin" TargetName="Grid" Value="1,3,1,1" />
                            <Setter Property="Margin" TargetName="ToolBarHeader" Value="0,0,0,4" />
                            <Setter Property="Margin" TargetName="PART_ToolBarPanel" Value="1,0,2,2" />
                            <Setter Property="DockPanel.Dock" TargetName="ToolBarHeader" Value="Top" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{StaticResource ForegroundDisabledBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Menu}">
        <Setter Property="Background" Value="{StaticResource BackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}" />
        <Setter Property="Margin" Value="0 0 0 -0.1" />
    </Style>

    <Style TargetType="{x:Type MenuItem}">
        <Setter Property="Background" Value="{StaticResource BackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <Border x:Name="templateRoot"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                        <Grid VerticalAlignment="Center">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <ContentPresenter x:Name="Icon"
                                              Content="{TemplateBinding Icon}"
                                              ContentSource="Icon" HorizontalAlignment="Center"
                                              Height="16" Margin="3"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              VerticalAlignment="Center" Width="16" />
                            <Path x:Name="GlyphPanel"
                                  Data="F1M10,1.2L4.7,9.1 4.5,9.1 0,5.2 1.3,3.5 4.3,6.1 8.3,0 10,1.2z"
                                  Fill="{TemplateBinding Foreground}" FlowDirection="LeftToRight"
                                  Margin="3" Visibility="Collapsed" VerticalAlignment="Center" />
                            <ContentPresenter ContentTemplate="{TemplateBinding HeaderTemplate}"
                                              Content="{TemplateBinding Header}" Grid.Column="1"
                                              ContentStringFormat="{TemplateBinding HeaderStringFormat}"
                                              ContentSource="Header" Margin="{TemplateBinding Padding}"
                                              RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            <Popup x:Name="PART_Popup" AllowsTransparency="True" Focusable="False"
                                   IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
                                   PopupAnimation="{StaticResource {x:Static SystemParameters.MenuPopupAnimationKey}}"
                                   Placement="Bottom" MinWidth="150">
                                <Border x:Name="SubMenuBorder" BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="1" Background="{TemplateBinding Background}"
                                        Padding="2">
                                    <ScrollViewer x:Name="SubMenuScrollViewer"
                                                  Style="{StaticResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                                        <Grid RenderOptions.ClearTypeHint="Enabled">
                                            <Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                                <Rectangle x:Name="OpaqueRect"
                                                           Fill="{Binding Background, ElementName=SubMenuBorder}"
                                                           Height="{Binding ActualHeight, ElementName=SubMenuBorder}"
                                                           Width="{Binding ActualWidth, ElementName=SubMenuBorder}" />
                                            </Canvas>
                                            <Rectangle Fill="{TemplateBinding Background}"
                                                       HorizontalAlignment="Left" Margin="29,2,0,2" Width="1" />
                                            <ItemsPresenter x:Name="ItemsPresenter"
                                                            KeyboardNavigation.DirectionalNavigation="Cycle"
                                                            Grid.IsSharedSizeScope="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                            KeyboardNavigation.TabNavigation="Cycle" />
                                        </Grid>
                                    </ScrollViewer>
                                </Border>
                            </Popup>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSuspendingPopupAnimation" Value="True">
                            <Setter Property="PopupAnimation" TargetName="PART_Popup" Value="None" />
                        </Trigger>
                        <Trigger Property="Icon" Value="{x:Null}">
                            <Setter Property="Visibility" TargetName="Icon" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible" />
                            <Setter Property="Visibility" TargetName="Icon" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IsHighlighted" Value="True">
                            <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource BackgroundHightlightBrush}" />
                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource BorderHightlightBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="{StaticResource ForegroundDisabledBrush}" />
                            <Setter Property="Fill" TargetName="GlyphPanel" Value="{StaticResource BackgroundDisabledBrush}" />
                        </Trigger>
                        <Trigger Property="CanContentScroll" SourceName="SubMenuScrollViewer" Value="False">
                            <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=SubMenuScrollViewer}" />
                            <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=SubMenuScrollViewer}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type TabControl}">
        <Setter Property="Background" Value="{StaticResource BackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}" />
        <Setter Property="BorderThickness" Value="{DynamicResource BorderThickness}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid x:Name="templateRoot" ClipToBounds="True" SnapsToDevicePixels="True"
                          KeyboardNavigation.TabNavigation="Local" Margin="0 -1 0 0"
                          Background="{StaticResource BackgroundBrush}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="ColumnDefinition0" />
                            <ColumnDefinition x:Name="ColumnDefinition1" Width="0" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition x:Name="RowDefinition0" Height="Auto" />
                            <RowDefinition x:Name="RowDefinition1" Height="*" />
                        </Grid.RowDefinitions>
                        <TabPanel x:Name="HeaderPanel" Background="{TemplateBinding Background}"
                                  Grid.Column="0" IsItemsHost="True" Margin="2,2,2,0" Grid.Row="0"
                                  KeyboardNavigation.TabIndex="1" Panel.ZIndex="1" />
                        <Border x:Name="ContentPanel" BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}" Grid.Column="0"
                                KeyboardNavigation.DirectionalNavigation="Contained" Grid.Row="1"
                                KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local">
                            <ContentPresenter x:Name="PART_SelectedContentHost"
                                              ContentTemplate="{TemplateBinding SelectedContentTemplate}"
                                              Content="{TemplateBinding SelectedContent}"
                                              ContentStringFormat="{TemplateBinding SelectedContentStringFormat}"
                                              ContentSource="SelectedContent"
                                              Margin="{TemplateBinding Padding}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TabStripPlacement" Value="Bottom">
                            <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="1" />
                            <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0" />
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*" />
                            <Setter Property="Height" TargetName="RowDefinition1" Value="Auto" />
                            <Setter Property="Margin" TargetName="HeaderPanel" Value="2,0,2,2" />
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Left">
                            <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0" />
                            <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0" />
                            <Setter Property="Grid.Column" TargetName="HeaderPanel" Value="0" />
                            <Setter Property="Grid.Column" TargetName="ContentPanel" Value="1" />
                            <Setter Property="Width" TargetName="ColumnDefinition0" Value="Auto" />
                            <Setter Property="Width" TargetName="ColumnDefinition1" Value="*" />
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*" />
                            <Setter Property="Height" TargetName="RowDefinition1" Value="0" />
                            <Setter Property="Margin" TargetName="HeaderPanel" Value="2,2,0,2" />
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Right">
                            <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0" />
                            <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0" />
                            <Setter Property="Grid.Column" TargetName="HeaderPanel" Value="1" />
                            <Setter Property="Grid.Column" TargetName="ContentPanel" Value="0" />
                            <Setter Property="Width" TargetName="ColumnDefinition0" Value="*" />
                            <Setter Property="Width" TargetName="ColumnDefinition1" Value="Auto" />
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*" />
                            <Setter Property="Height" TargetName="RowDefinition1" Value="0" />
                            <Setter Property="Margin" TargetName="HeaderPanel" Value="0,2,2,2" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="TextElement.Foreground"
                                    TargetName="templateRoot"
                                    Value="{StaticResource BorderHightlightBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type TabPanel}">
        <Setter Property="Background" Value="{StaticResource BackgroundBrush}" />
    </Style>

    <Style TargetType="{x:Type TabItem}">
        <Setter Property="Background" Value="{StaticResource BackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}" />
        <Setter Property="BorderThickness" Value="{DynamicResource BorderThickness}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid x:Name="templateRoot" SnapsToDevicePixels="True">
                        <Border x:Name="mainBorder" BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="1,1,1,0" Background="{TemplateBinding Background}" Margin="0">
                            <Border x:Name="innerBorder" BorderThickness="1,1,1,0" Margin="-1" Opacity="0" />
                        </Border>
                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" Focusable="False" HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true" />
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}}" Value="Left" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="mainBorder"
                                    Value="{StaticResource BackgroundHightlightBrush}" />
                            <Setter Property="BorderBrush" TargetName="mainBorder"
                                    Value="{StaticResource BorderHightlightBrush}" />
                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1" />
                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true" />
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}}" Value="Bottom" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="mainBorder"
                                    Value="{StaticResource BackgroundHightlightBrush}" />
                            <Setter Property="BorderBrush" TargetName="mainBorder"
                                    Value="{StaticResource BorderHightlightBrush}" />
                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1" />
                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true" />
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}}" Value="Right" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="mainBorder"
                                    Value="{StaticResource BackgroundHightlightBrush}" />
                            <Setter Property="BorderBrush" TargetName="mainBorder"
                                    Value="{StaticResource BorderHightlightBrush}" />
                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1" />
                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true" />
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}}" Value="Top" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="mainBorder"
                                    Value="{StaticResource BackgroundHightlightBrush}" />
                            <Setter Property="BorderBrush" TargetName="mainBorder"
                                    Value="{StaticResource BorderHightlightBrush}" />
                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0" />
                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false" />
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}}" Value="Left" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56" />
                            <Setter Property="Background" TargetName="mainBorder"
                                    Value="{StaticResource BackgroundDisabledBrush}" />
                            <Setter Property="BorderBrush" TargetName="mainBorder"
                                    Value="{StaticResource BorderBrush}" />
                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1" />
                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false" />
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}}" Value="Bottom" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56" />
                            <Setter Property="Background" TargetName="mainBorder"
                                    Value="{StaticResource BackgroundDisabledBrush}" />
                            <Setter Property="BorderBrush" TargetName="mainBorder"
                                    Value="{StaticResource BorderBrush}" />
                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1" />
                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false" />
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}}" Value="Right" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56" />
                            <Setter Property="Background" TargetName="mainBorder"
                                    Value="{StaticResource BackgroundDisabledBrush}" />
                            <Setter Property="BorderBrush" TargetName="mainBorder"
                                    Value="{StaticResource BorderBrush}" />
                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1" />
                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false" />
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}}" Value="Top" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56" />
                            <Setter Property="Background" TargetName="mainBorder"
                                    Value="{StaticResource BackgroundDisabledBrush}" />
                            <Setter Property="BorderBrush" TargetName="mainBorder"
                                    Value="{StaticResource BorderBrush}" />
                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0" />
                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false" />
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}}" Value="Left" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1" />
                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true" />
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}}" Value="Left" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="mainBorder"
                                    Value="{StaticResource BackgroundHightlightBrush}" />
                            <Setter Property="BorderBrush" TargetName="mainBorder"
                                    Value="{StaticResource BorderHightlightBrush}" />
                            <Setter Property="Panel.ZIndex" Value="1" />
                            <Setter Property="Margin" Value="-2,-2,0,-2" />
                            <Setter Property="Opacity" TargetName="innerBorder" Value="1" />
                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1" />
                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false" />
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}}" Value="Bottom" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1" />
                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true" />
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}}" Value="Bottom" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="mainBorder"
                                    Value="{StaticResource BackgroundHightlightBrush}" />
                            <Setter Property="BorderBrush" TargetName="mainBorder"
                                    Value="{StaticResource BorderHightlightBrush}" />
                            <Setter Property="Panel.ZIndex" Value="1" />
                            <Setter Property="Margin" Value="-2,0,-2,-2" />
                            <Setter Property="Opacity" TargetName="innerBorder" Value="1" />
                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1" />
                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false" />
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}}" Value="Right" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1" />
                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true" />
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}}" Value="Right" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="mainBorder"
                                    Value="{StaticResource BackgroundHightlightBrush}" />
                            <Setter Property="BorderBrush" TargetName="mainBorder"
                                    Value="{StaticResource BorderHightlightBrush}" />
                            <Setter Property="Panel.ZIndex" Value="1" />
                            <Setter Property="Margin" Value="0,-2,-2,-2" />
                            <Setter Property="Opacity" TargetName="innerBorder" Value="1" />
                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1" />
                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false" />
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}}" Value="Top" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0" />
                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true" />
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}}" Value="Top" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="mainBorder"
                                    Value="{StaticResource BackgroundHightlightBrush}" />
                            <Setter Property="BorderBrush" TargetName="mainBorder"
                                    Value="{StaticResource BorderHightlightBrush}" />
                            <Setter Property="Panel.ZIndex" Value="1" />
                            <Setter Property="Margin" Value="-2,-2,-2,0" />
                            <Setter Property="Opacity" TargetName="innerBorder" Value="1" />
                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0" />
                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0" />
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ComboBoxItemThemedStyle" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border x:Name="Bd"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="true">
                            <Setter Property="Background"
                                    Value="{StaticResource BackgroundHightlightBrush}" />
                            <Setter Property="Foreground"
                                    Value="{StaticResource ForegroundBrush}" />
                            <Setter Property="BorderThickness" Value="2" />
                            <Setter Property="BorderBrush"
                                    Value="{StaticResource BorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" Value="{StaticResource BackgroundDisabledBrush}" />
                            <Setter Property="Foreground" Value="{StaticResource ForegroundDisabledBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource {x:Type ComboBox}}">
        <Setter Property="ItemContainerStyle" Value="{StaticResource ComboBoxItemThemedStyle}" />
    </Style>

    <Style TargetType="ListViewItem">
        <Setter Property="Background" Value="{StaticResource BackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="true">
                        <GridViewRowPresenter
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource BackgroundHightlightBrush}" />
                <Setter Property="BorderBrush" Value="{StaticResource BorderHightlightBrush}" />
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{StaticResource BackgroundHightlightBrush}" />
                <Setter Property="BorderBrush" Value="{StaticResource BorderHightlightBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type ListView}">
        <Setter Property="Background" Value="{StaticResource BackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    </Style>

    <Style TargetType="GridViewColumnHeader">
        <Setter Property="Background" Value="{StaticResource BackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="Padding" Value="5" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid SnapsToDevicePixels="True">
                        <Border BorderThickness="1" BorderBrush="{TemplateBinding Border.BorderBrush}"
                             Background="{TemplateBinding Panel.Background}" Name="HeaderBorder">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition MaxHeight="7" />
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                                <Rectangle Fill="#FFE3F7FF" Name="UpperHighlight" Visibility="Collapsed" />
                                <Border Padding="{TemplateBinding Control.Padding}" Grid.Row="0" Grid.RowSpan="2">
                                    <ContentPresenter RecognizesAccessKey="True" Content="{TemplateBinding ContentControl.Content}"
                                         ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                                         ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}"
                                         Name="HeaderContent" Margin="0,0,0,1"
                                         HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                         VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                                         SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                                </Border>
                            </Grid>
                        </Border>
                        <Canvas>
                            <Thumb Name="PART_HeaderGripper">
                                <Thumb.Style>
                                    <Style TargetType="Thumb">
                                        <Style.Resources>
                                            <ResourceDictionary />
                                        </Style.Resources>
                                        <Setter Property="Canvas.Right" Value="-9" />
                                        <Setter Property="FrameworkElement.Width" Value="18" />
                                        <Setter Property="FrameworkElement.Height">
                                            <Setter.Value>
                                                <Binding Path="ActualHeight" RelativeSource="{RelativeSource Mode=TemplatedParent}" />
                                            </Setter.Value>
                                        </Setter>
                                        <Setter Property="Control.Padding">
                                            <Setter.Value>
                                                <Thickness>0,0,0,0</Thickness>
                                            </Setter.Value>
                                        </Setter>
                                        <Setter Property="Panel.Background" Value="{StaticResource BackgroundBrush}" />
                                        <Setter Property="Control.Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="Thumb">
                                                    <Border Padding="{TemplateBinding Control.Padding}" Background="#00FFFFFF">
                                                        <Rectangle Fill="{TemplateBinding Panel.Background}" Width="1" HorizontalAlignment="Center" />
                                                    </Border>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </Thumb.Style>
                            </Thumb>
                        </Canvas>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource BackgroundHightlightBrush}" />
                <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>